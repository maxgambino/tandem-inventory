# Script pour tester l'API Tandem
Write-Host "üß™ Test de l'API Tandem" -ForegroundColor Green

$baseUrl = "http://localhost:4000"

# Test 1: Health check
Write-Host "1Ô∏è‚É£ Test du health check..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "$baseUrl/health" -UseBasicParsing
    Write-Host "‚úÖ Health check: $($response.StatusCode)" -ForegroundColor Green
    Write-Host "   Response: $($response.Content)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Health check √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 2: Liste des modules
Write-Host "2Ô∏è‚É£ Test de la liste des modules..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "$baseUrl/api" -UseBasicParsing
    Write-Host "‚úÖ Modules API: $($response.StatusCode)" -ForegroundColor Green
    Write-Host "   Response: $($response.Content)" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Modules API √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Liste des produits (devrait √©chouer sans DB)
Write-Host "3Ô∏è‚É£ Test de la liste des produits..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "$baseUrl/api/products" -UseBasicParsing
    Write-Host "‚úÖ Produits API: $($response.StatusCode)" -ForegroundColor Green
    Write-Host "   Response: $($response.Content)" -ForegroundColor Gray
} catch {
    Write-Host "‚ö†Ô∏è Produits API: $($_.Exception.Message)" -ForegroundColor Yellow
    Write-Host "   (Normal si PostgreSQL n'est pas d√©marr√©)" -ForegroundColor Gray
}

Write-Host "üéØ Tests termin√©s !" -ForegroundColor Green







